<Application x:Class="FosterAndFreeman.RecoverCompanionApplication.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:FosterAndFreeman.RecoverCompanionApplication"
             xmlns:converters="clr-namespace:FosterAndFreeman.RecoverCompanionApplication.UserInterface.Converters"
             Exit="Application_Exit"
             Startup="Application_Startup">
    <Application.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:StateEqualMaximisedConverter x:Key="StateEqualMaximisedConverter"/>

        <Color x:Key="FFGreen">#FF2EAC62</Color>
        <SolidColorBrush x:Key="FFGreenBrush" Color="{DynamicResource FFGreen}" />

        <!-- Button Style -->
        <Style TargetType="{x:Type Button}">
            <Setter Property="FontSize"
                Value="14" />
            <Setter Property="Foreground"
                Value="White" />
            <Setter Property="FontFamily"
                    Value="Segoi UI SemiLight"/>
            <Setter Property="BorderThickness"
                    Value="2"/>
            <Setter Property="Padding"
                    Value="25, 10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <!--  Put a border around the content  -->
                        <Border Name="ButtonBorder"
                            Background="Black"
                            BorderBrush="{StaticResource ResourceKey=FFGreenBrush}"                                
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="Center"                                              
                                              VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Set Border to grey if disabled -->
                            <Trigger Property="IsEnabled"
                                 Value="False">
                                <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="Gray" />
                            </Trigger>
                            <!-- Fills in button when pressed -->
                            <Trigger Property="IsPressed"
                                 Value="True">
                                <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{StaticResource ResourceKey=FFGreenBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- TextBlock Style -->
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Segoi UI Semilight"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        
        <!-- Toggle Button Style -->
        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="FontSize"
                Value="14" />
            <Setter Property="Foreground"
                Value="White" />
            <Setter Property="FontFamily"
                    Value="Segoi UI SemiLight"/>
            <Setter Property="VerticalAlignment"
                Value="Stretch" />
            <Setter Property="BorderThickness"
                    Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <!--  Put a border around the content  -->
                        <Border Name="ButtonBorder"
                            Background="Black"
                            BorderBrush="{StaticResource ResourceKey=FFGreenBrush}"                                
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Set Border to grey if disabled -->
                            <Trigger Property="IsEnabled"
                                 Value="False">
                                <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="Gray" />
                            </Trigger>
                            <!-- Fills in button when checked -->
                            <Trigger Property="IsChecked"
                                 Value="True">
                                <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{StaticResource ResourceKey=FFGreenBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Horizontal Thumb Style -->
        <Style x:Key="HorizontalThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border BorderThickness="0" 
                                Background="{StaticResource FFGreenBrush}"
                                BorderBrush="{StaticResource FFGreenBrush}"                                 
                                CornerRadius="5"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Vertical Thumb Style -->
        <Style x:Key="VerticalThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border BorderThickness="0" 
                                Background="{StaticResource FFGreenBrush}"
                                BorderBrush="{StaticResource FFGreenBrush}"                                 
                                CornerRadius="5"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Scroll Bar Style -->
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="Transparent"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="MinWidth" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid SnapsToDevicePixels="true" Background="Transparent">
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource VerticalThumb}" Width="8"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="10"/>
                    <Setter Property="MinHeight" Value="10"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid SnapsToDevicePixels="true" Background="Transparent">
                                    <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.Thumb>
                                            <Thumb Style="{DynamicResource HorizontalThumb}" Height="8"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Expander Button Style -->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                            <Grid Width="20" Height="20" Margin="10" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Ellipse Fill="{DynamicResource FFGreenBrush}"/>
                                <Path Margin="5" RenderOptions.EdgeMode="Aliased" Name="ExpandPath" Stroke="Black" StrokeThickness="2" Data="M 5 1 L 5 9 M 1 5 L 9 5" />
                            </Grid>
                            <ContentPresenter Content="{TemplateBinding Content}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 1 5 L 9 5"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ExpandPath" Property="Stroke" Value="Gray" />
                                <Setter Property="Data" TargetName="ExpandPath" Value=""/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Expander Style -->
        <Style TargetType="{x:Type Expander}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <StackPanel>
                                <ToggleButton x:Name="HeaderSite" 
                                              ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                              Content="{TemplateBinding Header}"                                               
                                              Foreground="{TemplateBinding Foreground}" 
                                              FontWeight="{TemplateBinding FontWeight}"                                               
                                              FontStyle="{TemplateBinding FontStyle}" 
                                              FontStretch="{TemplateBinding FontStretch}" 
                                              FontSize="{TemplateBinding FontSize}" 
                                              FontFamily="{TemplateBinding FontFamily}" 
                                              HorizontalAlignment="Stretch"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"                                                                                             
                                              Margin="1" 
                                              MinWidth="0" 
                                              MinHeight="0"                                               
                                              Padding="{TemplateBinding Padding}" 
                                              Style="{StaticResource ExpandCollapseToggleStyle}" 
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="ExpandSite"                                                   
                                                  Focusable="false" 
                                                  Visibility="Collapsed"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  Margin="{TemplateBinding Padding}" 
                                                  Content="{TemplateBinding Content}"                                                  
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



    </Application.Resources>
</Application>
