/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef PROCESSSCREEN_VIEW_BASE_HPP
#define PROCESSSCREEN_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/processscreen_screen/ProcessScreenPresenter.hpp>
#include <gui/containers/Background.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <gui/containers/DeadSpaceAnimation.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <gui/containers/ChamberSelection.hpp>
#include <touchgfx/containers/ModalWindow.hpp>
#include <touchgfx/Color.hpp>

class ProcessScreenViewBase : public touchgfx::View<ProcessScreenPresenter>
{
public:
    ProcessScreenViewBase();
    virtual ~ProcessScreenViewBase() {}

    /*
     * Custom Action Handlers
     */
    virtual void AbortProcess()
    {
        // TODO override and implement this function in ProcessScreenView
    }

    virtual void ConfirmAbort()
    {
        // TODO override and implement this function in ProcessScreenView
    }

    virtual void NextStage()
    {
        // TODO override and implement this function in ProcessScreenView
    }

    virtual void ConfirmStopFuming()
    {
        // TODO override and implement this function in ProcessScreenView
    }

protected:
    FrontendApplication& application() { 
        return *static_cast<FrontendApplication*>(Application::getInstance()); 
    }

    /*
     * Member Declarations
     */
    Background Backdrop;
    touchgfx::ButtonWithIcon BtnStartFuming;
    touchgfx::ButtonWithLabel BtnStopFuming;
    DeadSpaceAnimation Animation;
    touchgfx::Image ImgFinished;
    touchgfx::ButtonWithLabel BtnHome;
    touchgfx::TextArea TxtStageInformation;
    touchgfx::ButtonWithIcon BtnBack;
    touchgfx::ButtonWithIcon BtnAbort;
    touchgfx::Button BtnStartProcess;
    ChamberSelection CtrlChamberSelection;
    touchgfx::ModalWindow AbortWindow;
    touchgfx::TextArea TxtAbortMessage;
    touchgfx::ButtonWithLabel BtnAbortNo;
    touchgfx::ButtonWithLabel BtnAbortYes;
    touchgfx::ModalWindow StopFumingWindow;
    touchgfx::TextArea TxtStopFumingMessage;
    touchgfx::ButtonWithLabel BtnStopFumingNo;
    touchgfx::ButtonWithLabel BtnStopFumingYes;

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ProcessScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

};

#endif // PROCESSSCREEN_VIEW_BASE_HPP
