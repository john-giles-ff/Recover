/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FREDA_VIEW_BASE_HPP
#define FREDA_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/freda_screen/FREDAPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

class FREDAViewBase : public touchgfx::View<FREDAPresenter>
{
public:
    FREDAViewBase();
    virtual ~FREDAViewBase() {}

    /*
     * Custom Action Handlers
     */
    virtual void ToggleEngineerMode()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void GotoPresets()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void GotoCustom()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void ToggleInlet()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void TogglePurge()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void ToggleBypass()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void ToggleStandby()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void LidUp()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void LidStop()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void LidDown()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void TogglePump()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void ToggleBaseFan()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void ToggleBaseHeater()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void TogglePrecursorHeater()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void ToggleStiringFans()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void ResetTimer()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void BreakSeal()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void GotoAuto()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void Prechecks()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void PumpDown()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void Heat()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void Off()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void ToggleHideData()
    {
        // TODO override and implement this function in FREDAView
    }

    virtual void Cool()
    {
        // TODO override and implement this function in FREDAView
    }

protected:
    FrontendApplication& application() { 
        return *static_cast<FrontendApplication*>(Application::getInstance()); 
    }

    /*
     * Member Declarations
     */
    touchgfx::Box Background;
    touchgfx::ButtonWithIcon BtnBack;
    touchgfx::ToggleButton BtnToggleEngineerMode;
    touchgfx::TextArea TxtEngineerMode;
    touchgfx::Container CustomCommands;
    touchgfx::TextAreaWithOneWildcard TxtResponse;
    touchgfx::Container KeyboardContainer;
    touchgfx::Container PresetCommands;
    touchgfx::ToggleButton BtnToggleInlet;
    touchgfx::ToggleButton BtnTogglePurge;
    touchgfx::ToggleButton BtnToggleBypass;
    touchgfx::ToggleButton BtnToggleStandby;
    touchgfx::TextArea TxtPurge;
    touchgfx::TextArea TxtBypass;
    touchgfx::TextArea TxtInlet;
    touchgfx::TextArea TxtStandby;
    touchgfx::ToggleButton BtnTogglePump;
    touchgfx::TextArea TxtPump;
    touchgfx::ButtonWithLabel BtnBreakSeal;
    touchgfx::ButtonWithLabel BtnLidDown;
    touchgfx::ButtonWithLabel BtnLidUp;
    touchgfx::ButtonWithLabel BtnLidStop;
    touchgfx::ToggleButton BtnToggleBaseFan;
    touchgfx::ToggleButton BtnToggleBaseHeater;
    touchgfx::TextArea TxtBaseFan;
    touchgfx::TextArea TxtBaseHeater;
    touchgfx::ToggleButton BtnTogglePrecursorHeater;
    touchgfx::TextArea TxtPreHeater;
    touchgfx::ToggleButton BtnToggleStiringFans;
    touchgfx::TextArea TxtStirringFans;
    touchgfx::ButtonWithLabel BtnTimer;
    touchgfx::ToggleButton BtnToggleHideData;
    touchgfx::TextArea TxtHideData;
    touchgfx::Container AutoCommands;
    touchgfx::ButtonWithLabel BtnInitialise;
    touchgfx::ButtonWithLabel BtnPumpdown;
    touchgfx::ButtonWithLabel BtnHeat;
    touchgfx::ButtonWithLabel BtnAbort;
    touchgfx::ButtonWithLabel BtnCool;
    touchgfx::ButtonWithLabel BtnSetHeaters;
    touchgfx::ButtonWithLabel BtnPresets;
    touchgfx::ButtonWithLabel BtnAuto;
    touchgfx::ButtonWithLabel BtnCustom;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TXTRESPONSE_SIZE = 256;
    touchgfx::Unicode::UnicodeChar TxtResponseBuffer[TXTRESPONSE_SIZE];

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<FREDAViewBase, const touchgfx::AbstractButton&> buttonCallback;

};

#endif // FREDA_VIEW_BASE_HPP
