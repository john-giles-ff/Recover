/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SETTINGSSCREEN_VIEW_BASE_HPP
#define SETTINGSSCREEN_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/settingsscreen_screen/SettingsScreenPresenter.hpp>
#include <gui/containers/Background.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/Container.hpp>

class SettingsScreenViewBase : public touchgfx::View<SettingsScreenPresenter>
{
public:
    SettingsScreenViewBase();
    virtual ~SettingsScreenViewBase() {}

protected:
    FrontendApplication& application() { 
        return *static_cast<FrontendApplication*>(Application::getInstance()); 
    }

    /*
     * Member Declarations
     */
    Background Backdrop;
    touchgfx::Box LanguageBorder;
    touchgfx::Box LanguageBackground;
    touchgfx::ButtonWithIcon BtnBack;
    touchgfx::TextAreaWithOneWildcard TxtBuild;
    touchgfx::TextArea TxtLanguage;
    touchgfx::Container LanguageContainer;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TXTBUILD_SIZE = 12;
    touchgfx::Unicode::UnicodeChar TxtBuildBuffer[TXTBUILD_SIZE];

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<SettingsScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

};

#endif // SETTINGSSCREEN_VIEW_BASE_HPP
